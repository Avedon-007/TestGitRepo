/*
 The three adjacent digits in the 1000-digit number that have the greatest product are 9 x 9 x 8 = 648.
731671765313306249192251196744265747423553491949349698352031277450632623957831
801698480186947885184385861560789112949495459501737958331952853208805511125406
987471585238630507156932909632952274430435576689664895044524452316173185640309
871112172238311362229893423380308135336276614282806444486645238749303589072962
904915604407723907138105158593079608667017242712188399879790879227492190169972
088809377665727333001053367881220235421809751254540594752243525849077116705560
136048395864467063244157221553975369781797784617406495514929086256932197846862
248283972241375657056057490261407972968652414535100474821663704844031998900088
952434506585412275886668811642717147992444292823086346567481391912316282458617
866458359124566529476545682848912883142607690042242190226710556263211111093705
442175069416589604080719840385096245544436298123098787992724428490918884580156
166097919133875499200524063689912560717606058861164671094050775410022569831552
0005593572972571636269561882670428252483600823257530420752963450
Find the nine adjacent digits in the 1000-digit number that have the greatest product. What is the value of
this product?
 */

package lesson3.preIntermediateLevel;
import java.math.BigInteger;
import java.util.Arrays;

public class Task_10 
{
	public static void main(String[] args) 
	{
		//Test data
		String bigNum = "7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843858615607891129494954595017379583319528532088055111254069874715852386305071569329096329522744304355766896648950445244523161731856403098711121722383113622298934233803081353362766142828064444866452387493035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776657273330010533678812202354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450";
		//Instantiate new object
		Task_10 task = new Task_10();
		//Method application
		
	}			
	
	public void searchNineAdjacentDigits(BigInteger bigNum)
	{
		
	}
}

/*
public class Task_10 
{
	public static void main(String[] args) 
	{
			String bigNum = "7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843858615607891129494954595017379583319528532088055111254069874715852386305071569329096329522744304355766896648950445244523161731856403098711121722383113622298934233803081353362766142828064444866452387493035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776657273330010533678812202354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450";
			int[] bigNumArr = new int[1000];
			long sum = 0;
			int[] sumArray = new int[9];
	//------------------------------------------------------------------- 
	// из стринга делаем массив				
			for(int i =0; i<1000; i++)
			{
				bigNumArr[i] = Integer.parseInt(String.valueOf(bigNum.charAt(i)));
				//System.out.println(bigNumArr[i]);
			}
			// System.out.println(Arrays.toString(bigNumArr)); // вывожу массив
	//--------------------------------------------------------------------------------------------
	// нахожу наибольшую сумму 9 последовательных елементов 		
			for(int j = 0; j <= bigNumArr.length-10; j++)
			{
				int s = bigNumArr[j] * bigNumArr[j+1] * bigNumArr[j+2] * bigNumArr[j+3] * bigNumArr[j+4] * bigNumArr[j+5] * bigNumArr[j+6] * bigNumArr[j+7] * bigNumArr[j+8];
							
				if(sum<s)
				{
					sum = s;
					for (int i = 0; i < sumArray.length; i++) // присваиваею массиву(sumArray) из 9 чисел значения максимальных чисел в последовательности массивы(bigNumArr)
					{
						sumArray[i] =  bigNumArr[j + i];
					}
				}				
			}
// ------------вывожу 9 чисел, которые нашел выше----------------------------------------------			
			for (int i = 0; i < sumArray.length; i++)
			{
				System.out.print(sumArray[i]);
				
				if (i < sumArray.length - 1)
					System.out.print("x");
			}			
			System.out.print("=" + sum);
	}
}
*/